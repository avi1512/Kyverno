apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: drop-all-capabilities
  annotations:
    policies.kyverno.io/title: Drop All Capabilities
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Capabilities permit privileged actions without giving full root access. All
      capabilities should be dropped from a Pod, with only those required added back.
spec:
  validationFailureAction: Audit
  background: true
  rules:

    # Rule for containers
    - name: require-drop-all-containers
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          names:
            - '*jenkins'
            - '*nexus'
            - opensearch*
            - sonar*
            - akv2k8s
            - velero*
            - spegel*
      preconditions:
        all:
        - key: "{{ request.operation || 'BACKGROUND' }}"
          operator: NotEquals
          value: DELETE
      validate:
        message: "Containers must drop `ALL` capabilities."
        foreach:
          - list: request.object.spec.containers[]
            deny:
              conditions:
                all:
                - key: ALL
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.drop[].to_upper(@) || `[]` }}"

    # Rule for initContainers, excluding specific pod names
    - name: require-drop-all-init-containers
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          names:
            - '*jenkins'
            - '*nexus'
            - opensearch*
            - sonar*
            - akv2k8s
            - velero*
            - spegel*
      preconditions:
        all:
        - key: "{{ request.operation || 'BACKGROUND' }}"
          operator: NotEquals
          value: DELETE
      validate:
        message: "Init containers must drop `ALL` capabilities."
        foreach:
          - list: request.object.spec.initContainers[]
            deny:
              conditions:
                all:
                - key: ALL
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.drop[].to_upper(@) || `[]` }}"

    # Rule for ephemeralContainers, excluding different pod names
    - name: require-drop-all-ephemeral-containers
      match:
        any:
        - resources:
            kinds:
              - Pod
      preconditions:
        all:
        - key: "{{ request.operation || 'BACKGROUND' }}"
          operator: NotEquals
          value: DELETE
      validate:
        message: "Ephemeral containers must drop `ALL` capabilities."
        foreach:
          - list: request.object.spec.ephemeralContainers[]
            deny:
              conditions:
                all:
                - key: ALL
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.drop[].to_upper(@) || `[]` }}"